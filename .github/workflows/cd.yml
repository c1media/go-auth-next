name: 🚀 CD Pipeline

on:
  push:
    branches: [main]
    tags: ["v*"]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/go-auth-template

jobs:
  # Build and Push Docker Images
  build-and-push:
    name: 🏗️ Build & Push Images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📝 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: 🏗️ Build and push application image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to Staging
  deploy-staging:
    name: 🧪 Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    # environment: staging  # Uncomment after creating staging environment in GitHub settings

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🛠️ Setup Deployment Tools
        run: |
          echo "Install your deployment CLI tools here"
          # Example: npm install -g @railway/cli

      - name: 🚀 Deploy to Staging
        run: |
          echo "🚀 Deploying to staging environment..."
          echo "Configure your Railway deployment here"
          # Example for Railway:
          # railway link $PROJECT_ID
          # railway up --detach

      - name: 🧪 Run smoke tests
        run: |
          echo "🧪 Running smoke tests against staging..."
          echo "Test your Railway deployment endpoints"
          # Health check:
          # curl -f https://staging.yourapp.railway.app/health

      - name: 📢 Notify deployment
        run: |
          echo "📢 Deployment notification placeholder"
          echo "Status: ${{ job.status }}"
          echo "Configure Slack, Discord, or email notifications here"
          # 
          # Example Slack notification (add SLACK_WEBHOOK_URL secret and uncomment):
          # - uses: 8398a7/action-slack@v3
          #   with:
          #     status: [job.status]
          #     webhook_url: [secrets.SLACK_WEBHOOK_URL]

  # Deploy to Production
  deploy-production:
    name: 🌟 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-staging]
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    # environment: production  # Uncomment after creating production environment in GitHub settings

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🌟 Deploy to Production
        run: |
          echo "🌟 Deploying to production..."
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "Configure your Railway production deployment here"
          # Example for Railway:
          # railway link $PROD_PROJECT_ID
          # railway up --detach

      - name: 🧪 Run production health checks
        run: |
          echo "🧪 Running production health checks..."
          echo "Verify your Railway deployment is healthy"
          # Health check:
          # curl -f https://yourapp.railway.app/health

      - name: 📢 Notify production deployment
        run: |
          echo "📢 Production deployment notification"
          echo "Status: ${{ job.status }}"
          echo "Version: ${{ github.ref_name }}"
          echo "Configure your notification system here"

  # Create GitHub Release
  create-release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    needs: deploy-production
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            DEPLOYMENT.md
            docker-compose.yml
            docker-compose.prod.yml
